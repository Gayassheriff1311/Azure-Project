{
	"name": "KingMoffatt_TimeManagementDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "XML",
						"type": "DatasetReference"
					},
					"name": "XML",
					"description": "XML FILE FROM INPUT (kmstorageaccount001)"
				},
				{
					"dataset": {
						"referenceName": "ToLoadMultipleExcellFiles",
						"type": "DatasetReference"
					},
					"name": "xlsxToCSV"
				},
				{
					"dataset": {
						"referenceName": "RestResourceForJSON_Birmingham",
						"type": "DatasetReference"
					},
					"name": "BirminghamJSON"
				},
				{
					"dataset": {
						"referenceName": "RestResourceForJSON_Munich",
						"type": "DatasetReference"
					},
					"name": "MunichJSON",
					"description": "Dataflow for Munich JSON"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CSV",
						"type": "DatasetReference"
					},
					"name": "SinkToCSV",
					"description": "CSV FILE FROM INPUT(kmstorageaccount001)"
				},
				{
					"dataset": {
						"referenceName": "CSV",
						"type": "DatasetReference"
					},
					"name": "sinkToOutputCSV",
					"description": "Sink to CSV file from Multiple XLSX files"
				},
				{
					"dataset": {
						"referenceName": "CSV",
						"type": "DatasetReference"
					},
					"name": "sinkToOutputCSVfromBirJson"
				},
				{
					"dataset": {
						"referenceName": "CSV",
						"type": "DatasetReference"
					},
					"name": "sink1sinkToOutputCSVfromMunichJson"
				}
			],
			"transformations": [
				{
					"name": "flattenXML"
				},
				{
					"name": "filterNullforEmpID"
				},
				{
					"name": "select1"
				},
				{
					"name": "filterNullforEmpIDJSON"
				},
				{
					"name": "select2"
				},
				{
					"name": "filterNullforEmpIDJSONMunich"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "derivedColumn4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          root as (worksheet as ({@name} as string, Row as ({@index} as short, Column1 as string, Fri as short, Mon as short, Thu as short, Tue as short, Wed as short)[]))",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'CityName',",
				"     validationMode: 'none',",
				"     namespaces: true) ~> XML",
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as string,",
				"          Column_6 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'CityName') ~> xlsxToCSV",
				"source(output(",
				"          body as (Column2 as string, Fri as short, Mon as short, Thu as short, Tue as short, Wed as short),",
				"          headers as [string,string]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     httpMethod: 'GET',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     paginationRules: ['supportRFC5988' -> 'true'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'arrayOfDocuments']) ~> BirminghamJSON",
				"source(output(",
				"          body as (Column2 as string, Fri as short, Mon as short, Thu as short, Tue as short, Wed as short),",
				"          headers as [string,string]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     httpMethod: 'GET',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     paginationRules: ['supportRFC5988' -> 'true'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'arrayOfDocuments']) ~> MunichJSON",
				"XML foldDown(unroll(root.worksheet.Row),",
				"     mapColumn(",
				"          EmpID = root.worksheet.Row.Column1,",
				"          Monday = root.worksheet.Row.Mon,",
				"          Tuesday = root.worksheet.Row.Tue,",
				"          Wednesday = root.worksheet.Row.Wed,",
				"          Thursday = root.worksheet.Row.Thu,",
				"          Friday = root.worksheet.Row.Fri,",
				"          CityName = root.worksheet.{@name}",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenXML",
				"xlsxToCSV filter(Column_1!='') ~> filterNullforEmpID",
				"BirminghamJSON select(mapColumn(",
				"          EmpID = body.Column2,",
				"          Monday = body.Mon,",
				"          Tuesday = body.Tue,",
				"          Wednesday = body.Wed,",
				"          Thursday = body.Thu,",
				"          Friday = body.Fri",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(EmpID!='') ~> filterNullforEmpIDJSON",
				"MunichJSON select(mapColumn(",
				"          EmpID = body.Column2,",
				"          Monday = body.Mon,",
				"          Tuesday = body.Tue,",
				"          Wednesday = body.Wed,",
				"          Thursday = body.Thu,",
				"          Friday = body.Fri",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 filter(EmpID!='') ~> filterNullforEmpIDJSONMunich",
				"filterNullforEmpID derive(CityName = replace(CityName, '/XLSX/', '')) ~> derivedColumn1",
				"derivedColumn1 derive(CityName = replace(CityName, '.xlsx', '')) ~> derivedColumn2",
				"filterNullforEmpIDJSON derive(CityName = 'Birmingham') ~> derivedColumn3",
				"filterNullforEmpIDJSONMunich derive(CityName = 'Munich') ~> derivedColumn4",
				"flattenXML sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['results.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> SinkToCSV",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['MultipleXLSX_To_CSV.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          EmpID = Column_1,",
				"          Monday = Column_2,",
				"          Tuesday = Column_3,",
				"          Wednesday = Column_4,",
				"          Thursday = Column_5,",
				"          Friday = Column_6,",
				"          CityName",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkToOutputCSV",
				"derivedColumn3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Birmingham.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          EmpID,",
				"          Monday,",
				"          Tuesday,",
				"          Wednesday,",
				"          Thursday,",
				"          Friday,",
				"          CityName",
				"     ),",
				"     partitionBy('hash', 1)) ~> sinkToOutputCSVfromBirJson",
				"derivedColumn4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Munich.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          EmpID,",
				"          Monday,",
				"          Tuesday,",
				"          Wednesday,",
				"          Thursday,",
				"          Friday,",
				"          CityName",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1sinkToOutputCSVfromMunichJson"
			]
		}
	}
}